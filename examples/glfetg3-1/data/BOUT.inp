# settings file for BOUT++
# glf 3+1 model for ETG

##################################################
# Global settings used by the core code

NOUT = 600          # number of time-steps
TIMESTEP = 1.0       # time between outputs
archive = 20        # Archive restart files after this number of outputs
wall_limit = 0.4   # wall time limit (in hours)

ShiftXderivs = true # use shifted radial derivatives?
TwistShift = true   # use twist-shift condition?
ShiftOrder = 0      # interpolation order (1 = nearest neighbour, 0=FFT)
TwistOrder = 0      # order of twist-shift interpolation

MZ = 257             # number of points in z direction (2^n + 1)
ZPERIOD = 1000         # Fraction of a torus to simulate

MXG = 2
MYG = 2

NXPE = 16            # Number of processor in X

grid = "data/Cyclone_nx260ny128_etg_fix3.nc"  # Grid file

dump_format = "nc"      # Dump file format. "nc" = NetCDF, "pdb" = PDB
restart_format = "nc"   # Restart file format

StaggerGrids = false    # Use staggered grids (EXPERIMENTAL)

##################################################
# Communications
# Fastest setting depends on machine and MPI
# implementation. Do not affect result.

[comms]

async = false           # Use asyncronous sends?
pre_post = false        # Post receives as early as possible
group_nonblock = false  # Use non-blocking group operations?

##################################################
# Laplacian inversion routines

[laplace]

# max_mode = 16  # Maximum N to solve for

##################################################
# FFTs

[fft]

fft_measure = true  # If using FFTW, perform tests to determine fastest method

##################################################
# derivative methods

[ddx]

first = C4  # order of first x derivatives (options are 2 or 4)
second = C4 # order of second x derivatives (2 or 4)
upwind = W3 # order of upwinding method (1, 4, 0 = TVD (DO NOT USE), 3 = WENO)

[ddy]

first = C4
second = C4
upwind = W3

[ddz]

first = C4  # Z derivatives can be done using FFT
second = C4
upwind = W3

##################################################
# Solver settings

[solver]

# mudq, mldq, mukeep, mlkeep preconditioner options
ATOL = 1.0e-12 # absolute tolerance
RTOL = 1.0e-12  # relative tolerance

use_precon = false    # Use preconditioner: User-supplied or BBD
use_jacobian = false  # Use user-supplied Jacobian

mxstep = 5000   # Number of internal steps between outputs
adams_moulton = false # Use Adams-Moulton method (default is BDF)
func_iter = false     # Functional iteration (default is Newton)

##################################################
# settings for high-beta reduced MHD

[glfetg]

density = 1.0e20       # number density of deuterium [m^-3]
              

## Effects to include/exclude

include_jpar0 = false     # determines whether to include jpar0 terms
include_curvature = true # include curvature drive term?

nonlinear  = false     # include non-linear terms?
Zion = 1.0            #ion Z
etae = 3.137          #Ln/Lt
tau = 1.0             #Ti/Te
electromagnetic = false   #include electromagnetic perturbation

relax_j_vac = false    # Relax to zero-current in the vacuum
relax_j_tconst = 1e-2  # Time constant for vacuum relaxation

##################################################
# BRACKET_METHOD flags:
# 0:BRACKET_STD; derivative methods will be determined 
#   by the choices C or W in this input file
# 1:BRACKET_SIMPLE; 2:BRACKET_ARAKAWA; 3:BRACKET_CTU.

bm_exb_flag = 0
bm_mag_flag = 2
##################################################################

Te_fit = true
Te_0 = 1000        #eV
Te_s = 0.3406           #shear
Te_x0 = 0.84      #max shear location
Te_C = 50          #eV constant
L_tem = 0.5795    #temperature length scale

#################################################################

## Toroidal filtering
filter_z = true   # remove all except one mode
filter_z_mode = 1  # Specify which harmonic to keep (1 = fundamental)
low_pass_z = 32    # Keep up to and including this harmonic (-1 = keep all)
zonal_flow = 0    # remove this zonal harmonic  (-1 = keep zonal harmonic)
zonal_field= 0     # remove this zonal harmonic  (-1 = keep zonal harmonic)
zonal_bkgd = -1    # remove this zonal harmonic  (-1 = keep zonal harmonic)

## Jpar smoothing
smooth_j_x = true   # Filter Jpar in the X direction

## Vacuum region control

vacuum_pressure = 0.02 # the pressure below which it is considered vacuum
                       # fraction of peak pressure
vacuum_trans = 0.01   # transition width (fraction of P)

## Resistivity and Hyper-resistivity

vac_lund = -1.0e8    # Lundquist number in vacuum  (negative -> infinity)
core_lund = -1.0e8  # Lundquist number in core (negative -> infinity)

diffusion_ne4 = 1.0e-8 # 4th order parallel diffusion for electron density (<0 NONE)


## field inversion flags: Add the following
#  1 - Zero-gradient DC component on inner boundary
#  2 - Zero-gradient AC component on inner boundary
#  4 -      "        DC     "      " outer    "
#  8 -      "        AC     "      " outer    "
# 16 - Zero all DC components of the result
# 32 - Don't use previous solution to start iterations
#      (iterative methods only) 
# 64 - Set the width of the boundary layer to 1
# 128 - use 4th order differencing
# 256 - Laplacian = 0 inner boundary (combine 2nd & 4th-order)
# 512 - Laplacian = 0 outer boundary ( sometimes works )

general_flags = 769 # inversion flags for all inversion quantities

##################################################
# settings for individual variables
# The section "All" defines default settings for all variables
# These can be overridden for individual variables in
# a section of that name.

[All]
scale = 0.0 # default size of initial perturbations

# form of initial profile:
# 0 - constant
# 1 - Gaussian
# 2 - Sinusoidal
# 3 - Mix of mode numbers (like original BOUT)

xs_opt = 1
ys_opt = 1
zs_opt = 2

xs_s0 = 0.5
xs_wd = 0.1

ys_s0 = 0.5
ys_wd = 0.1

zs_mode = 1

# boundary conditions
# -------------------
# dirichlet    - Zero value
# neumann      - Zero gradient
# zerolaplace  - Laplacian = 0, decaying solution
# constlaplace - Laplacian = const, decaying solution
#
# relax( )   - Make boundary condition relaxing

bndry_all = dirichlet # Default to zero-value

[ne]   # electron density

scale = 1.0e-5

[Lambda] 
bndry_core = dirichlet

[Ppar]  # electron parallel pressure

bndry_xin = neumann
bndry_xout = neumann
bndry_core = neumann

[Pperp] # perpendicular pressure

bndry_xin = neumann
bndry_xout = neumann
bndry_core = neumann

[Vpar]

bndry_core = dirichlet

[ns] 

bndry_core = dirichlet

[Ts1]

bndry_core = neumann

[Ts]

bndry_core = neumann

[phi_i]

bndry_core = neumann

[gyrophi]

bndry_core = neumann

[gyroVpar]

bndry_core = dirichlet

[Psi]

bndry_core = zerolaplace
bndry_xout = zerolaplace
bndry_core = zerolaplace

[Jpar]

bndry_core = dirichlet

[gyroPsi]

bndry_core = zerolaplace
bndry_xout = zerolaplace
bndry_core = zerolaplace

[gyrophi_as]

bndry_core = neumann

[gyrophi_a]

bndry_core = neumann

[gyrophi_bs2]

bndry_core = neumann

[gyrophi_bs1]

bndry_core = neumann

[gyrophi_bs]

bndry_core = neumann

[gyroPsi_as]

bndry_core = zerolaplace
bndry_xout = zerolaplace
bndry_core = zerolaplace

[gyroPsi_a]

bndry_core = zerolaplace
bndry_xout = zerolaplace
bndry_core = zerolaplace

[Grad2_ne]

bndry_core = zerolaplace
bndry_xout = zerolaplace
bndry_core = zerolaplace
