These codes are used to simulate the Plasma response to vacuum RMP field.
Now what we do is divided into two steps:

1. Generate the vacuum RMP field by the 'vacuum_rmp.cxx'. All the code and the input file are in the 'vacuum_rmp' folder.
 This code is modified from the elm_pb.cxx code, and the elm_pb part is still kept in this code. 
I use the invert_laplace method to calculate the vacuum RMP field by setting the outer boundary condition fixed. 
Now this method doesn't support parallel computing in radial direction, so that NXPE in BOUT.inp should be 1. 
After running the vacuum_rmp code. I read the rmp data into a 'txt' file by the IDL procedure 'read_rmp.pro', for example:

IDL> read_rmp,path='data',period=3,output='dens6_m7n3'

This procedure will generate a txt file which include the vacuum RMP data named 'dens6_m7n3.txt' in the 'data' folder. 

2. Do the elm_pb simulation with the vacuum RMP field by this 'elm_pb_rmp.cxx' code. All the code and input file is in the 'elm_pb_rmp' folder.

Firstly, we have to copy the 'txt'file which include the vacuum RMP data generated by the 'vacuum_rmp.cxx' code into the 'data' folder. The RMP data in the 'txt' file will be read into the simulation by the code in the  'elm_pb_rmp.cxx', so that we have to keep the name of the 'txt' file as same as the 'txt' file name in the code. 

In the two steps, we should use the same grid file and the same parameters 'MZ' and 'ZPERIOD'.