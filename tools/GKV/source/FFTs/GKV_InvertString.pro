FUNCTION GKV_RemoveParens, stringIn;;  This function accepts an ascii string;  as input, and returns a string in which;  any leading or trailing parenthesis are ;  removed.;  ;  Written by W.M. Nevins;	9/24/02;; First, remove leading/trailing '(';subStrings = STRSPLIT(stringIn, '(', /EXTRACT)temp = STRJOIN(subStrings, '(');; Now, remove trailing/leading ')';subStrings = STRSPLIT(temp, ')', /EXTRACT)result = STRJOIN(subStrings, ')')RETURN, resultEND  ;  ****** GKV_RemoveParens ******  ;FUNCTION GKV_InvertString, stringIn;; This function assumes that the input string is an; ascii representation of a fraction, and returns; an ascii representation of the inverse of that; fraction.;; Written by W.M. Nevins;	9/24/02;; Break string into sub-strings at '/';subStrings1 = STRSPLIT(stringIn, '/', /EXTRACT)nSubStrings = N_ELEMENTS(subStrings1)IF(nSubStrings EQ 0) THEN RETURN, ''IF(nSubStrings GT 2) THEN BEGIN	MESSAGE, "Too Many /'s", /INFORMATIONAL	result = '1/(' + GKV_RemoveParens(stringIn) + ')'	RETURN, resultENDIF;; Remove any leading/trailing parenthesis;subStrings = STRARR(nSubStrings)FOR i=0, nSubStrings-1 DO subStrings[i] = GKV_RemoveParens(subStrings1[i])CASE nSubStrings OF	1	:	result = '1/(' + subStrings[0] + ')'	2	: 	result = '(' + subStrings[1] + ')/(' + subStrings[0] + ')'ENDCASERETURN, resultEND  ;  ****** GKV_InvertString  ******  ;