FUNCTION GetKeyWord, keyword, structure,Debug=d;; Searches 'structure' for the tag 'keyword'.; Returns value field associated with this tag.;; NOTE that 'structure' may be undefined on entry.  In this case, it is; important that 'structure' only appear as an argument to N_ELEMENTS, TypeOf, or SIZE.; A null result ('undefined') should be returned.;; On return, 'structure' contains all tags and values; from 'structure' EXCEPT for 'keyword' and its associated value; if they appeared in 'structure' on entry.; However, if 'keyword' is the only tag in 'structure' then; 'structure' is set to -1 on return (IDL 5.3 does not support null structures).;; Written by W.M. Nevins;	3/5/00;debug=1result='undefined'otherTags=0IF(N_ELEMENTS(d) NE 0) THEN debug=dIF(N_ELEMENTS(structure) EQ 0) THEN RETURN, resultarg1Type = TypeOf(keyword)IF(arg1Type NE 7)  THEN BEGIN	MESSAGE, 'First argument must be a string', Informational=d	return, resultENDIFarg2Type = typeOF(structure)							; Check for proper argument typeIF(arg2Type NE 8) THEN BEGIN							; Wasn't passed a structure, so	structure = -1									;	set Nstructure=-1 (as a flag)	RETURN, result									;	and return 'undefined'ENDIFnTags = N_TAGS(structure)IF(nTags EQ 0) THEN RETURN, resulttagNames = TAG_NAMES(structure)tagNames = STRTRIM(tagNames, 2)							; Remove both leading and trailing blankscommand_str = 'structure = {'tagToFind = STRTRIM(keyword)							; Remove both leading and trailing blanksFOR i=0, ntags-1 DO BEGIN								; Search tags of 'structure'	IF( STRCMP(tagToFind, tagNames[i], /FOLD_CASE) ) THEN BEGIN		result = structure.(i)						; IF mulitple occurances of 'keyword' in	ENDIF ELSE BEGIN								;	'structure', only the LAST occurance is significant		i_str = STRING(i, FORMAT='(I3)')				; Construct command string for 'Nstructure'		i_str = STRTRIM(i_str, 2)						; Remove both leading and trailing blanks		IF(otherTags NE 0) THEN command_str = command_str + ', '		command_str = command_str + tagNames[i] + ':' + 'structure.(' + i_str + ')'		othertags = othertags + 1	ENDELSEENDFORcommand_str = command_str + '}'IF(othertags NE 0) THEN BEGIN	ok = EXECUTE(command_str)ENDIF ELSE BEGIN	structure = -1ENDELSE	RETURN, resultEND ; ******GetKeyWord ****** ;