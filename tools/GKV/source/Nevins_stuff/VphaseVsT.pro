Function GKVs2D::VphaseVsT, nmodes=n_modes, _Extra=Extra;;;nmodes=10IF(N_ELEMENTS(n_modes) EQ 1) THEN nmodes=n_modes > 1self -> get, axis=1, gridunits=xunitsself -> get, axis=2, gridunits=tunitsft = self -> fft(axis=1)ft -> get, axis=1, range=krange, gridValues=kValuePtrkvalues = *kValuePtrdk=kvalues[1] - kvalues[0]krange[0]=0ft -> SignalWindow, axis=1, range=krangeft -> restrict;; Get first 10 fourier harmonics;temp1 = OBJARR(nmodes+1)FOR i=1,nmodes DO temp1[i] = ft -> slice(axis=1, index=i);; compute frequency vs time for each harmonic;temp2=OBJARR(nmodes+1)FOR i=1,nmodes DO temp2[i] = temp1[i] -> WvsT(_Extra=Extra)omegas = OBJARR(nmodes+1)vPhase = OBJARR(nmodes+1)FOR i=1,nmodes DO BEGIN	Structure=temp2[i] -> slice(omega='max', /maxlocation)	Structure.slice -> trash	omegas[i] = structure.maxlocation	vPhase[i] = omegas[i] -> over(i*dk)	vPhase[i] -> set, title='V!D!4u!X!N', mnemonic='Vphase', units=xunits + '/' + tunitsENDFORvPhase[0] = vPhase[1] -> OBJAVG(vPhase[1:nmodes])FOR i=1,nmodes DO temp1[i]  -> trashFOR i=1,nmodes DO temp2[i]  -> trashFOR i=1,nmodes DO omegas[i] -> trashft -> trashRETURN, vPhaseEND