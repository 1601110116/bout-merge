PRO nCmod, 	BOUTstructure, a_mid=aMid, R_mid=Rmid, R_jy=Rjy, a_jy=ajy, q_jy=qjy, 	$		Omega_ci=wci, rho_s=rhos, xValues=xValues, SxHat=SxHat, BpBt=Bp_Bt;; This proceedure converts data read from BOUT NETCDF file into local ; orthogonal coordinates with time base  in seconds and x,z in cm.;; Arguments:;;	BOUTstructure	The structure created by NETCDF_DATA upon reading BOUT data;; Keywords:;;	R_mid		Major radius of separatrix at outboard midplane.  Defaults to;			89.24250 cm. (Optional);;	a_mid		Minor radius of separatrix at outboard midplane. ;			Defaults to 29.09 cm. (Optional) ;			;	R_jy		Major radius of separatrix at current location.  Defaults to;			89.24250 cm. (Optional);;	a_jy		Minor radius of separatrix at current location.  Defaults to ;			29.09 cm.  (Optional);;	q_jy		Local field-line pitch(that is, 'nu' in Xu's paper), RB_p/aB_t.  ;			Defaults to 1.588726e+00. (Optional) ;;	Omega_ci	Value of the cyclotron frequency at the midplane.;			Defaults to Omega_ci = 1.99689e+08/s. (Optional);;	rho_s		Value of the ion sound radius at the midplane.;			Defaults to rho_s = 0.0592858 cm. (Optional);;	xValues		Values of radial (x) coordinate (in units of rho_s) at;			poloidal (y) location of this data.  Defaults to x-values;			of the first object contained in BOUTstructure. (Optional);;	SxHat		An array of values of integral of local magnetic shear from midplane;			to current location.  Default is an array of the same length as xValues;			containing zeros (appropriate for the midpland).;			(Optional);;	BpBt		Ratio of the poloidal to the toroidal magnetic field at current location.;			Default is 0.2051238. (Optional);; Written by W.M. Nevins;	1/25/01;IF(TypeOf(BOUTstructure) NE 8) THEN BEGIN	MESSAGE, "nCmod expects a structure (produced by NETCDF_DATA) as the argument", /INFORMATIONAL	RETURNENDIF;; Set defaults and get data from command line;R_mid = 8.924250e01IF(N_ELEMENTS(Rmid) EQ 1) THEN R_mid = RmidR_jy = 8.924250e01IF(N_ELEMENTS(Rjy) EQ 1) THEN R_jy=RjyBpBt = 2.051238e-01IF(N_ELEMENTS(Bp_Bt) EQ 1) THEN BpBt=ABS(Bp_Bt)a_mid = 29.09IF KEYWORD_SET(amid) THEN a_mid=amidIF KEYWORD_SET(ajy) THEN BEGIN	a_jy = ABS(ajy)ENDIF ELSE BEGIN	IF KEYWORD_SET(qjy) THEN BEGIN		a_jy = ABS(qjy*BpBt*R_jy)	ENDIF ELSE BEGIN		a_jy = a_mid		qjy = a_jy	ENDELSEENDELSEOmega_ci = 1.99689e+08IF(N_ELEMENTS(wci) EQ 1) THEN Omega_ci=wcirho_s = 6.04e-02IF(N_ELEMENTS(rhos) EQ 1) THEN rho_s=rhos;; Find number of objects;nObjs = N_TAGS(BOUTstructure);; Correct time base;FOR i=0, nObjs-1 DO t_to_sec, BOUTstructure.(i), Omega_ci=Omega_ci;; Rescale x-axis to current location;IF(N_ELEMENTS(xValues) EQ 0) THEN BEGIN		; Get local x-values if necessary	BOUTstructure.(0) -> Get, Axis=1, GridValues=xPtr	xValues = *xPtrENDIFIF (N_ELEMENTS(SxHat) EQ 0) THEN BEGIN	Sxhat = 0.*xValuesENDIFFOR i=0, nObjs-1 DO BOUTstructure.(i) -> ScaleAxis, x=xValues;; Correct for shear in B-field ; (the x-integral in ShearMetric is to be interpreted as an "anti-derivative", ;  it MUST be performed in the SAME x-coordinate at which x-derivatives (or k_x);   will later be computed.  The 'x' and 'z' axis must also have the same units;   when this operation is performed).;FOR i=0, nObjs-1 DO BOUTstructure.(i) -> ShearMetric, jy=jy, SxHat=SxHat;; Change z-axis to cm;FOR i=0, nObjs-1 DO z_to_cm, BOUTstructure.(i), rho_s=rho_s;; Rescale z-axis with so that 'z' will correspond to distance in the local poloidal direction;FOR i=0, nObjs-1 DO BOUTstructure.(i) -> ScaleAxis, "z", const=ABS(BpBt*(R_jy/a_mid))	;  Need factor of (R_jy/a_mid) in const;											;  because BOUT data has 'z' changed from; Changes title and mnemonic of 'z' axis to 'theta'					;  an angle to a length using 'a_mid'.  Must;											;  convert to actual lenght in toroidal direction with R_jy.FOR i=0, nObjs-1 DO BOUTstructure.(i) -> Set, axis=2, Gridmnemonic="theta", Gridtitle="!4h!x";; Change x-axis to cm;FOR i=0, nObjs-1 DO x_to_cm, BOUTstructure.(i), rho_s=rho_s;; Make x-axis uniform;FOR i=0, nObjs-1 DO BOUTstructure.(i) -> ScaleAxis, "x", /UniformEND ; ****** nCmod ****** ;