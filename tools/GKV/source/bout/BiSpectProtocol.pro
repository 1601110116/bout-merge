FUNCTION BiSpectProtocol, path=path, trange=t_range;; Automated protocol for computing bicoherence among:;; 	Er0 	(electron geodesic acoustic mode);	dphi	(Alfven wave ?);	dni	(Quasi-Coherent mode);cd, current=currentWorkingDirectoryIF(N_ELEMENTS(path) NE 0) THEN cd, pathtrange = [3.5e-5, 8.7e-5]IF(N_ELEMENTS(t_range) EQ 2) THEN trange=t_rangethisCase=0output = {Name:'CmodBispect'}GetMoreData	:thisCase=thisCase+1caseText = 'Case' + STRCOMPRESS(STRING(thisCase), /REMOVE_ALL)thisDataStr = GetBoutData(dFileID=caseTest, /Stick)thisPhiStr = thisDataStr.phi -> delta(axis='theta')thisPHiStr.avg -> view, /pretty;; Get trange from user;t_range = FLTARR(2)READ, t_range, PROMPT='Trange = 'IF(N_ELEMENTS(t_range) EQ 2) THEN trange=t_range;; Select desired portion of time series;FOR i=1,2 DO thisDataStr.(i) -> SignalWindow, t=trangeFOR i=1,2 DO thisDataStr.(i) -> RestrictFOR i=0,1 DO thisPhiStr.(i)  -> SignalWindow, t=trangeFOR i=0,1 DO thisPhiStr.(i)  -> Restrict;; Get radial electric field at separatrix as proxy for ; electron geodesic-acoustic mode;Er = thisPHiStr.avg -> dbyd('x')Er0= Er -> slice(x=0.)fEr0 = Er0 -> filter('t', omega_0=1400.*2.*!PI*1000., dOmega = 500*2.*!PI*1000.)nfEr0 = fEr0 -> MakeCopy()nfEr0 -> NormfEr0spect = nfEr0 -> xspect()fEr0spect -> tokHz;; get dni at separatrix as proxy for;  quasi-coherent mode;dn = thisDataStr.nidn0=dn -> slice(x=0.)dn0spect = dn0 -> xspect()dn0spect -> tokHzdn0spect -> view, /pretty, f=[0,500], k_theta=[-5,5];; Get k_theta from user;READ, k_theta, PROMPT='k_theta = ';dn0_k = dn0 -> FFT('theta')dn0_ktheta = dn0_k -> slice(k_theta=k_theta)ndn0_ktheta = dn0_ktheta -> MakeCopy()ndn0_ktheta -> Normdn0_kthetaSpect = ndn0_ktheta -> xspect()dn0_kthetaSpect -> tokHz;; Get dphi;dPhi0  = thisPhiStr.delta -> slice(x=0.)dPhi_k = dPHi0 -> FFT('theta')dPhi_ktheta = dPhi_k -> slice(k_theta=-k_theta)ndPhi_ktheta = dPhi_ktheta -> MakeCopy()ndPhi_ktheta -> NormdPhi_kthetaSpect = ndPhi_ktheta -> xspect()dPhi_kthetaSpect -> tokHz;; Plot spectra;dn0_kthetaSpect -> view, /pretty, f=[0,2000], dPhi_kthetaSpect, fEr0spect;; Form bispectra, etc.;thisBispectraStr = fEr0 -> BiSpect(dn0_ktheta, dPhi_ktheta);; plot bicoherence;thisBispectraStr.biCoherence -> ScaleAxis, 'omega1', const=1./(2.*!PI*1000.), title='f!D1!N', mnemonic='f_1', units='kHz'thisBispectraStr.biCoherence -> ScaleAxis, 'omega2', const=1./(2.*!PI*1000.), title='f!D2!N', mnemonic='f_2', units='kHz'thisBispectraStr.biCoherence -> view, /pretty, f_1=[0,2000], f_2=[0,2000];; Create output structure and save it to disk;thisBiSpectraStr = CREATE_STRUCT('fEr0', fEr0, 'dni_ktheta', dn0_ktheta, 'dphi_ktheta', dPhi_ktheta, thisBiSpectraStr)GKV_SaveStructure, thisBispectraStroutput = CREATE_STRUCT(output, caseText, thisBispectraStr);; Clean up ...;GKVdelete, thisDatastrGKVdelete, thisPhistr;dn0 -> trashdn0spect -> trashdn0_k -> trashdn0_kthetaSpect -> trashndn0_ktheta -> trash;dPHi0 -> trashdPhi_k -> trashdPhi_kthetaSpect -> trashndPhi_ktheta -> trash;Er -> trashEr0 -> trashfEr0spect -> trashnfEr0 -> trash;; More data?;more=''READ, More, PROMPT="More Data? ('y' or 'n'):"IF(TypeOf(more) EQ 7) THEN BEGIN	more = STRCOMPRESS(more, /REMOVE_ALL)	more = STRCMP(more, 'yes', 1, /FOLD_CASE)ENDIFIF(KEYWORD_SET(more)) THEN GOTO, GetMoreDataCD, currentWorkingDirectoryRETURN, outputEND ;  ****** BiSpectProtocal ******  ;