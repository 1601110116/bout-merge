FUNCTION GPI_Data, 	GetFile=GetFile, ShotNumber=shot_Number,$			Path=pathin, File=filein,		$			CodeID=Code_ID, CodePI=Code_PI, 	$			FileID=File_ID, RunID=Run_ID, 		$			Title=title, Mnemonic=mnemonic,		$			Units=units, DeBug=debug;; Purpose:;;		This routine reads GPI data from IDL save files and;		returns it in the form of a GKV object;; Keywords:;;	GetFile		Set this keyword (i.e., put "/GetFile" on the command line);			to read data from an IDL SAVE file.  Default is to get;			data from MDS PLUS system (which will only work on MIT;			VAX cluster). (Optional)  ;;	ShotNumber	Set this keyword the INTEGER value of;			the C-Mod shot number.;			The format of the shot number is '1yymmddsss',;			where yy is the year, mm is the month, ;			dd is the day, and sss is the shot number ;			within that day.  This must be provided if;			you are attempting to access data directly from;			the MDS PLUS system (that is, if the keyword;			'GetFile' is set).  Otherwise setting the ;			ShotNumber is optional.  If provided it will;			be used to fill the 'Run_ID' field.  Defaults;			to 1010622006. (Optional);;	Path		Set this keyword to a STRING variable containing;			the path to the directory in which you wish to;			begin your search for the IDL SAVE file containing;			the GPI data.  This varialbe is only used when the;			keyword 'GetFile' is set.  Defaults to the current;			directory.  (Optional);;	File		Set this keyword to a STRING variable containing;			the FULL designation of the IDL SAVE file containing;			the GPI data.  If this keyword is not set (and 'GetFile';			IS set) then a pop-up widget will appear to allow the;			user to select the appropriate file. (Optional);;	CodeID		Set this keyword to a STRING variable containing;			the desired contents of the 'CodeID' field which;			will appear in the lower left-hand corner of plots.;			Defaults to 'C-Mod GPI Data'. (Optional);;	CodePI		Set this keyword to a STRING variable containing ;			the desired contents of the 'CodePI' field which;			will appear in the lower left-hand corner of plots.;			Defaluts to 'Jim Terry'. (Optional);;	FileId		Set this keyword to a STRING variable containing;			the desired contents of the 'FileID' field which;			will appear in the lower right-hand corner of plots.;			Defaults to 'Shot Number'. (Optional);;	RunId		Set this keyword to a STRING variable containing;			the desired contents of the 'RunID' field which;			will appear in the lower right-hand corner of plots.;			Defaults to a STRING variable containing the ascii;			representation of 'ShotNumber' (see above).;			(Optional);;	Title		Set this keyword to a STRING variable containing;			the desired contents of the 'Title' field which;			will appear above "Pretty" plots.;			Defaults to 'GPI'. (Optional);;	Mnemonic	Set this keyword to a STRING variable containing;			the desired contents of the 'Mnemonic' field which;			will appear in above default plots, and is used as;			a default name when saving data.;			Defaults to 'GPI'. (Optional);;	Units		Set this keyword to a STRING variable containing;			the desired contents of the 'Units' field which;			will appear above plots.;			Defaults to 'Arbitrary Units'. (Optional);;	DeBug		Set this keyword (i.e., put '/DeBug' on the ;			command line) to have IDL print additional;			information which may (or may not ...) be;			helpful in debugging.  (Optional);; Written by W.M. Nevins;	12/5/01;; Get 'ShotNumber';ShotNumber = 1010622006IF(N_ELEMENTS(shot_number) GT 0) THEN BEGIN	IF(Query_Integer(shot_Number)) THEN ShotNumber=shot_number	IF( Query_String(shot_number)) THEN ShotNumber=LONG(shot_number)ENDIF;; Get GPI data, and load into 'output' and 'scale' common blocks;CD, current=currentWorkingDirectoryIF ( KEYWORD_SET(GetFile) OR KEYWORD_SET(FileIn) )THEN BEGIN	;	; Get data from IDL SAVE file	;	separator='/'	IF(!D.NAME EQ 'MAC') THEN separator=':'	;	; NOTE:	THIS IS NOT GOING TO WORK ON A VAX!  	; 	There is no way to set the directory-	;	separator character correctly.	;	; Check for 'path'	;	IF(N_ELEMENTS(path) ) THEN BEGIN		IF(TypeOf(Path) EQ 7) THEN CD, path	ENDIF	;	; Check for input file, 'FileIn'	;	IF( (N_Elements(FileIn) EQ 0) OR (TypeOf(FileIn) NE 7) ) THEN BEGIN		; 		; Use pop-up widget to select input file		;		FileIn=DIALOG_PICKFILE(FILTER='*.dat')		IF(FileIn EQ '') THEN BEGIN			;			; User failed to properly select an input file			;			MESSAGE, "No input file was selected -- Returning", /INFORMATIONAL			RETURN, 0		ENDIF		ENDIF 	;	; Check for 'FileIn'	;	FileInfo = FINDFILE('FileIn', COUNT=nDats)	IF(nDats EQ 0) THEN BEGIN		;		; Failed to find input file		;		MESSAGE, "Couldn't find input file " + FileIn + "-- Returning", /INFORMATIONAL		RETURN, 0	ENDIF ELSE BEGIN		; 		; Found an input file, so restore data from it!		;		RESTORE, FileInfo[0], VERBOSE=debug	ENDELSE	ENDIF ELSE BEGIN	;	; Get GPI data from MDS Plus system	; (assumes that user is on MIT VAX cluster ...)	get_xybion_data, shot=ShotNumberENDELSECD, currentWorkingDirectory;; Reference commom blocks; (which should have been created ; when GPI data was read in!;COMMON OUTPUT, a, shot_strCOMMON SCALE,  r_ix, z_pix, timeresult=0RETURN, resultEND	; ****** GPI_Data ****** ;