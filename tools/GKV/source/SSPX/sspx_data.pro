FUNCTION SSPX_DATA, path=path, nPhi=nPhi, ShotNumber=shotNumber;; Purpose:;;	This function reads SSPX data from ascii files as produced by;	Simon Woodruff.;; Keywords:;;	Path	Path to directory containing ascii SSPX data file.;		(optional);;; Written by W.M. Nevins;	1/28/02;cd, current=current_working_directoryIF(N_ELEMENTS(path) NE 0) THEN cd, path;; Read phi values from the SSPX ascii data file;nPhis=15IF(N_ELEMENTS(nPhi) EQ 1) THEN nPhis=nPhiphi=fltarr(nPhis)dataFile = DIALOG_PICKFILE(/READ)GET_LUN, lunOPENR, lun, dataFileREADF, lun, phiFREE_LUN, lun;phi_data = READ_ASCII(dataFile, TEMPLATE=ASCII_TEMPLATE(datafile), NUM_RECORDS=1);; Now, read values of the (normalized) Rogowski signal from the SSPX ascii data file;Rogowski_data=READ_ASCII(datafile, TEMPLATE=ASCII_TEMPLATE(datafile), DATA_START=1);;phi = phi_data.(0)t = (Rogowski_data.(0))[0,*]t = REFORM(t)Rogowski = (Rogowski_data.(0))[1:nPhis,*];; Initialize grid structure for first (toroidal angle) independent variable;grid1 = {grid}grid1.title='!4u!X'grid1.mnemonic = 'phi'grid1.units = ''grid1.boundary = 'periodic'grid1.uniform = 0bgrid1.range = [0,2.*!PI]nPhis = N_ELEMENTS(phi)grid1.irange = [0,nPhis-1];; Convert toroidal angle from degrees to radians;phi = (2.*!PI/360.)*phi;; shift origan to first phi-value;phi = phi - phi[0]grid1.values = PTR_NEW(phi);; Initialize grid structure for first (toroidal angle) independent variable;grid2 = {grid}grid2.title = 't'grid2.mnemonic = 't';; Change units to seconds (from micro seconds);;t=1.e-6*tgrid2.units = 'ms'grid2.boundary = 'open'grid2.uniform = 1bgrid2.values = PTR_NEW(t)nTs = N_ELEMENTS(t)grid2.irange=[0,nTs-1]grid2.range = [t[0],t[nTs-1]];; Initialize GKVs2D structure;objStr = {GKVs2D}objStr.title = 'Rogowski'objStr.mnemonic = 'Rogowski'objStr.units = ''objStr.values = PTR_NEW(rogowski)vmin = MIN(rogowski, MAX=vmax)objstr.vrange = [vmin, vmax]indices = REPLICATE('*',2)objStr.indices = PTR_NEW(indices)objstr.grid1=grid1objstr.grid2=grid2objStr.CodeName = "SSPX Data"objStr.CodePi = "Simon Woodruff"IF(Query_Integer(shotNumber)) THEN BEGIN	shotNumber = STRCOMPRESS(STRING(shotNumber), /REMOVE_ALL)	objStr.RunID = "Shot #" + shotNumberENDIF;objStr.FileID=dataFile;; Create GKVs2D object from objStr;result = OBJ_NEW('GKVs2D', objStr)cd, current_working_directoryreturn, resultEND	; ****** SSPX_DATA ****** ;