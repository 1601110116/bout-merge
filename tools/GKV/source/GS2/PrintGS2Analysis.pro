PRO PrintGS2Analysis, GS2AnalysisStr;; Purpose:;;	This proceedure prints data from the GS2 AnalysisProtocal;	(as stored in the output structure) for input into ;	the Summary Excel spreadsheet.;; Get fileID;GS2AnalysisStr.dphi -> get, FIleID=FileINseparator='/'IF(!D.NAME EQ 'MAC') THEN separator=':'IF(!D.NAME EQ 'WIN') THEN separator='\'subNames = STRSPLIT(fileIN, separator, /EXTRACT)		; Crack 'fileIn' on separatorsnSubNames = N_ELEMENTS(subNames)FileID = subNames[nSubNames-1]	;Print, fileID;; Set up array to hold floating point results;Floats =  FLTARR(24)index=0;; Get <dPhi^2> and radial std;AvgPhiObj = GS2AnalysisStr.phicorrs.avgsq -> AVG('x')Floats[index] = AvgPhiObj -> GetValues()index=index+1Floats[index] = AvgPhiObj -> GetErrors()index=index+1;; Print average fluxes and radial variation;FOR iSpecies = 0,1 DO BEGIN	FOR iFlux = 0,2 DO BEGIN		FOR iVal=0,1 DO BEGIN			Floats[index] = GS2AnalysisStr.AvgFlux[iSpecies, iFlux, iVal]			index=index+1		ENDFOR	ENDFORENDFOR;; Print tau_corr and radial variation;Floats[index] = GS2AnalysisStr.taucorr -> getvalues()index=index+1Floats[index] = GS2AnalysisStr.taucorr -> getErrors()index=index+1;; Print rms value of Gamma_ExB;Floats[index] = SQRT(GS2AnalysisStr.shear_spect_wk)index=index+1;; Print product Gamma_ExB*tau_corr;Floats[index] = ( GS2AnalysisStr.taucorr -> getvalues() )*( SQRT(GS2AnalysisStr.shear_spect_wk) )index=index+1;; Print radial correlation length and radial variations;Floats[index] = GS2AnalysisStr.Rcorr -> getvalues()index=index+1Floats[index] = GS2AnalysisStr.Rcorr -> getErrors()index=index+1;; Print y correlation length and radial variations;Floats[index] = GS2AnalysisStr.ycorr -> getvalues()index=index+1Floats[index] = GS2AnalysisStr.ycorr -> getErrors()index=index+1;; Print y half-width and radial variations;Floats[index] = GS2AnalysisStr.yHalf -> getvalues()index=index+1Floats[index] = GS2AnalysisStr.yHalf -> getErrors()index=index+1;; and we're done!;PRINT, FileID FOR index=0,23 do PRINT, Floats[index]RETURNEND