FUNCTION GKVs2D::FindRidgevalues = *self.valuesvalues=FLOAT(values)maxLocation = (values GE SHIFT(values,0,1))*(values GT SHIFT(values,0,-1))tvalues = *self.grid2.valuesxvalues = *self.grid1.valuesttemp = tvalues*tvaluesepsilon = MIN(ttemp, it0)xtemp = xvalues*xvaluesepsilon = MIN(xtemp, ix0)info = SIZE(maxLocation)info(3) = 3ixmin=0ixmax=info[1]-1itmin=0itmax=info[2]-1rightBdy = maxLocation[ixmax, *]iPlusMax = INTARR(30)iPlusMax[0] = it0FOR imaxNumber= 1,29 DO BEGIN	FOR it = iPlusMax[imaxNumber-1]+1, itmax DO BEGIN		IF(rightBdy[it]) THEN GOTO, GotPlusMax			ENDFOR	GOTO, DonePlusGotPlusmax	:	iPlusMax[iMaxNumber] = itENDFORDonePlus	: iMinusMax= INTARR(30)iMinusMax[0] = it0FOR imaxNumber= 1,29 DO BEGIN	FOR it = iMinusMax[imaxNumber-1]-1, 0, -1 DO BEGIN		IF(rightBdy[it]) THEN GOTO, GotminusMax			ENDFOR	GOTO, DoneMinusGotMinusmax	:	iMinusMax[iMaxNumber] = itENDFORiMaxNumber=29DoneMinus  :  nMinus = iMaxNumberridge = MAKE_ARRAY(SIZE=info)FOR imaxnumber = 1, 29 DO BEGIN	IF(iPlusMax[iMaxNumber] EQ 0) THEN GOTO, donePlus1	ridge[ixMax,iPlusMax[iMaxNumber]] = imaxnumberENDFORiMaxNumber=29donePlus1  :   nPlus = iMaxNumber FOR imaxnumber = 1, 29 DO BEGIN	IF(iMinusMax[iMaxNumber] EQ 0) THEN GOTO, doneMinus1	ridge[ixMax,iMinusMax[iMaxNumber]] = -imaxnumberENDFORdoneMinus1	:FOR iMaxNumber=1,29 DO BEGIN	ridge[*, iPlusMax[iMaxNumber-1]+1:iPlusMax[iMaxNumber] ] = (29+imaxNumber)*MaxLocation[*, iPlusMax[iMaxNumber-1]+1:iPlusMax[iMaxNumber] ]	ridge[*,iMinusMax[iMaxNumber]:iMinusMax[iMaxNumber-1]+1] = (31-imaxNumber)*MaxLocation[*,iMinusMax[iMaxNumber]:iMinusMax[iMaxNumber-1]+1]ENDFORpeakValues = values*maxLocationnxIn = n_ELEMENTS(xValues)nxOut = (1+nPlus+nMinus)*nxInxOut = FLTARR(nxOut)tOut = FLTARR(nxOut)vOut = FLTARR(nxOut)dx = xvalues[1] - xvalues[0]lx = xvalues[nxIn-1]-xvalues[0]IF(self.grid1.boundary EQ "periodic (open)") THEN lx = lx + dxFOR iMaxNumber=nMinus,1, -1 DO BEGIN	ibottom = (nMinus - iMaxNumber)*nxIn	itop    = ibottom + nxIn - 1	xOut[ibottom:itop] = xValues - iMaxNumber*lx	vout[ibottom:itop] = TOTAL(peakValues[*,iMinusMax[iMaxNumber]:iMinusMax[iMaxNumber-1]+1], 2)/TOTAL(maxLocation[*,iMinusMax[iMaxNumber]:iMinusMax[iMaxNumber-1]+1], 2)ENDFORFOR iMaxNumber=0,nPlus-1 DO BEGIN	ibottom = (nMinus + iMaxNumber)*nxIn	itop    = ibottom + nxIn - 1	xOut[ibottom:itop] = xValues + iMaxNumber*lx	vout[ibottom:itop] = TOTAL(peakValues[*,iPlusMax[iMaxNumber]:iPlusMax[iMaxNumber+1]-1], 2)/TOTAL(maxLocation[*,iPlusMax[iMaxNumber]:iPlusMax[iMaxNumber+1]-1], 2)ENDFORtemp = self -> slice(axis=2, /max)result = temp -> makeCopy(/NoValues, /NoErrorBars)result.values = PTR_NEW(vOut)vMin = gkvsd_min(vOut, MAX=vmax)result.vrange = [vmin,vmax]grid = result.grid1xmin = MIN(xOut, MAX=xmax)PTR_FREE, grid.valuesgrid.values =PTR_NEW(xOut)grid.range = [xmin,xmax]grid.irange= [0,nxOut-1]result.grid1 = gridtemp -> trashRETURN, ResultEND ;  ****** FindRidge ******  ;