PRO GKVs1D::AbsSQ, _Extra=EXTRA;; This proceedure replaces the self with ; its absolute value squared.;;  Arguments;;		None;;  Keywords;;		Any keywords will be passed to 'Set' to allow;		changes in the title, mnemonic, or units;; Written by W.M. Nevins;	10/6/03;values = *self.valuesPTR_FREE, self.valuesvalues = FLOAT( values*CONJ(values) )self.values = PTR_NEW(values)self.title = '!9!!!X' + self.title + '!9!!!X!U2!N'self.mnemonic = 'Abs_' + self.mnemonic + '_Sq'self.units = '(' + self.units + ')!U2!N'vMin = GKVsd_Min(values, MAX=vMax)self.vrange = [vMin, vMax]self -> SET, _Extra=ExtraRETURNEND  ; ****** PRO AbsSQ ****** ;FUNCTION GKVs1D::AbsSQ, _Extra=Extra;; This function returns the absolute; values squared of 'self';;  Arguments;;		None;;  Keywords;;		Any keywords will be passed to 'Set' to allow;		changes in the title, mnemonic, or units;; Written by W.M. Nevins;	10/6/03;result = self -> MakeCopy()result -> AbsSq, _Extra=ExtraRETURN, resultEND  ; ****** FUNCTION AbsSQ ****** ;